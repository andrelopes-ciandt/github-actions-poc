name: GitHub Actions Demo
on:
  push:
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'dry-run mode? (true or false)'
        required: false
        default: 'true'

env:
  GLOBAL_ENV: global_env

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    env:
      TEST_ENV: TEST_ENV
    steps:
      - name: Run only from main
        if: ${{ github.ref != 'refs/heads/main' }}
        run: echo "This workflow should be run by main branch only. Please check readme. Current branch is ${{ github.ref }}" && exit 1
        
  job2:
    runs-on: ubuntu-latest
    needs: Explore-GitHub-Actions
    env:
      TEST_ENV: ${{ (env.GLOBAL_ENV == 'global_env' || env.GLOBAL_ENV == 'global_env_test') && 'true' || 'false' }}
    steps:
      - name: Run only from main
        if: ${{ github.ref != 'refs/heads/main' }}
        run: echo "This workflow should be run by main branch only. Please check readme. Current branch is ${{ github.ref }}" && exit 1
  
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      
      - name: test actions secret
        run: echo "Action secret -> ${{ secrets.ACTION_SECRET }}"
        
      - name: test dependabot secret
        run: echo "Dependabot secret -> ${{ secrets.DEPENDABOT_SECRET }}"
        
      - name: Test env var
        run: env | grep TEST
        env:
          TEST_LOCAL_ENV: TEST_LOCAL_ENV
          
      - name: Test global env var
        run: echo "Global env -> ${{ (env.GLOBAL_ENV == 'global_env' || env.GLOBAL_ENV == 'global_env_test') && 'true' || 'false' }}"
        
      - name: Test check branch
        run: branch=$(git ls-remote | grep -w refs/heads/dev) && echo "$branch"
        
      - name: Shell
        run: |
          desired_default_branch="dev"
          current_default_branch=$(git symbolic-ref --short HEAD)
          
          echo $desired_default_branch
          echo $current_default_branch
          
          if [ $current_default_branch == $desired_default_branch ]; then
            echo "$desired_default_branch branch already exists!"
          else
            echo "$desired_default_branch does not exist yet. Creating ..."
            git checkout -b $desired_default_branch
            git push -u origin $desired_default_branch
            echo "$desired_default_branch created and pushed to remote!"
          fi
